#include <iostream>
#include <stdio.h>



using namespace std;

int table()
{
	char inchar;
	int state = 1;
	int id = 0;
	bool fflag = false;


	if ((inchar >= 'A' && inchar <= 'Z') || (inchar >= 'a' && inchar <= 'z'))
	{
		id = 2;
	}
	else if (inchar == '\'' || '(' || ')' || '{' || '}' || '[' || ']' || ',' || ';' || ':')
	{
		id = 4;
	}
	else if (inchar >= '0' && inchar <= '9')
	{
		id = 3;
	}
	else if (inchar == ' ')
	{
		id = 1;
	}
	else if (inchar == '*' || '+' || '-' || '=' || '/' || '<' || '>' || '%')
	{
		id = 5;
	}
	else if (inchar == '.')
	{
		id = 6;
	}
	else if (inchar == '$')
	{
		id = 7;
	}
	else
	{
		//unrecognized input 
	}

	switch (state)
	{
	case 1:
	{
		//this state we must remember to not go to the next char without progressing to the appropriate state
		switch (id)
		{
		case 1:
		{
			//this means first input was a space, do nothing and start process again until find any other char
		}
		case 2:
		{
			state = 2;
			//start keeping track of chars to put together keyword or identifier at the end
		}
		case 3:
		{
			state = 3;
		}
		case 4:
			state = 4;
		case 5:
			state = 5;
		case 6:
			state = 4;
		case 7:
		{
			//this state shouldnt happen when state = 1
		}
		}
	}
	case 2:
	{
		switch (id)
		{
		case 1:
		{
			state = 6;
			//this is the end of the keyword/identifier
		}
		case 2:
		{
			state = 2;
			//the keyword or identifier is being kept track of here
		}
		case 3:
		{
			state = 2;
			//this just means there are numbers in the identifier 
			//also this probably confirms it is an identifier and not a keyword
		}
		case 4:
		{
			state = 6;
			//end of keyword/identifier
		}
		case 5:
		{
			state = 6;
			//end of keyword/identifier
		}
		case 6:
		{
			state = 6;
			//end of keyword/identifier
		}
		case 7:
		{
			state = 2;
			//this means there is a $ in the identifier
		}
		}
	}
	case 3:
	{
		//this will end up being an int or a float 
		switch (id)
		{
		case 1:
		{
			state = 7;
			//end of the int
		}
		case 2:
		{
			state = 7;
			//end of the int
		}
		case 3:
		{
			state = 3;
			//still iterating through the int/float
		}
		case 4:
		{
			state = 7;
			//end of the int
		}
		case 5:
		{
			state = 7;
			//end of the int
		}
		case 6:
		{
			state = 8;
			//we noe know it will be a flaot, send to state 8 
		}
		case 7:
		{
			state = 7;
			//end of int
		}
		}
	}
	case 4:
	{
		//we know it is a seperator 
	}
	case 5:
	{
		//we know it is an operator  
	}
	case 6:
	{
		//final state for the keyword/identifier 
		//compare the string of chars to a list of keywords if it is not on list then it is an identifier 
	}
	case 7:
	{
		//final state for int
	}
	case 8:
	{
		//final state for a float 
	}
	}





}
